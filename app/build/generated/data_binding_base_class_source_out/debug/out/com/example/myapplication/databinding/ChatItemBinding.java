// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView leftChatTextView;

  @NonNull
  public final LinearLayout leftChatView;

  @NonNull
  public final TextView rightChatTextView;

  @NonNull
  public final LinearLayout rightChatView;

  @NonNull
  public final ImageView typingIndicatorLeft;

  @NonNull
  public final ImageView typingIndicatorRight;

  private ChatItemBinding(@NonNull RelativeLayout rootView, @NonNull TextView leftChatTextView,
      @NonNull LinearLayout leftChatView, @NonNull TextView rightChatTextView,
      @NonNull LinearLayout rightChatView, @NonNull ImageView typingIndicatorLeft,
      @NonNull ImageView typingIndicatorRight) {
    this.rootView = rootView;
    this.leftChatTextView = leftChatTextView;
    this.leftChatView = leftChatView;
    this.rightChatTextView = rightChatTextView;
    this.rightChatView = rightChatView;
    this.typingIndicatorLeft = typingIndicatorLeft;
    this.typingIndicatorRight = typingIndicatorRight;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.left_chat_text_view;
      TextView leftChatTextView = ViewBindings.findChildViewById(rootView, id);
      if (leftChatTextView == null) {
        break missingId;
      }

      id = R.id.left_chat_view;
      LinearLayout leftChatView = ViewBindings.findChildViewById(rootView, id);
      if (leftChatView == null) {
        break missingId;
      }

      id = R.id.right_chat_text_view;
      TextView rightChatTextView = ViewBindings.findChildViewById(rootView, id);
      if (rightChatTextView == null) {
        break missingId;
      }

      id = R.id.right_chat_view;
      LinearLayout rightChatView = ViewBindings.findChildViewById(rootView, id);
      if (rightChatView == null) {
        break missingId;
      }

      id = R.id.typing_indicator_left;
      ImageView typingIndicatorLeft = ViewBindings.findChildViewById(rootView, id);
      if (typingIndicatorLeft == null) {
        break missingId;
      }

      id = R.id.typing_indicator_right;
      ImageView typingIndicatorRight = ViewBindings.findChildViewById(rootView, id);
      if (typingIndicatorRight == null) {
        break missingId;
      }

      return new ChatItemBinding((RelativeLayout) rootView, leftChatTextView, leftChatView,
          rightChatTextView, rightChatView, typingIndicatorLeft, typingIndicatorRight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
